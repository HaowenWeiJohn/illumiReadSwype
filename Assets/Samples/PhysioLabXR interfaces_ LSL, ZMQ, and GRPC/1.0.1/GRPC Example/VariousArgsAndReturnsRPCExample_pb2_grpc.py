# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import VariousArgsAndReturnsRPCExample_pb2 as VariousArgsAndReturnsRPCExample__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2

GRPC_GENERATED_VERSION = '1.65.4'
GRPC_VERSION = grpc.__version__
EXPECTED_ERROR_RELEASE = '1.66.0'
SCHEDULED_RELEASE_DATE = 'August 6, 2024'
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    warnings.warn(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in VariousArgsAndReturnsRPCExample_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
        + f' This warning will become an error in {EXPECTED_ERROR_RELEASE},'
        + f' scheduled for release on {SCHEDULED_RELEASE_DATE}.',
        RuntimeWarning
    )


class RPCExampleStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ExampleOneArgOneReturn = channel.unary_unary(
                '/RPCExample/ExampleOneArgOneReturn',
                request_serializer=VariousArgsAndReturnsRPCExample__pb2.ExampleOneArgOneReturnRequest.SerializeToString,
                response_deserializer=VariousArgsAndReturnsRPCExample__pb2.ExampleOneArgOneReturnResponse.FromString,
                _registered_method=True)
        self.TestRPCNoArgs = channel.unary_unary(
                '/RPCExample/TestRPCNoArgs',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=VariousArgsAndReturnsRPCExample__pb2.TestRPCNoArgsResponse.FromString,
                _registered_method=True)
        self.TestRPCNoInputNoReturn = channel.unary_unary(
                '/RPCExample/TestRPCNoInputNoReturn',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.TestRPCNoReturn = channel.unary_unary(
                '/RPCExample/TestRPCNoReturn',
                request_serializer=VariousArgsAndReturnsRPCExample__pb2.TestRPCNoReturnRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.TestRPCTwoArgTwoReturn = channel.unary_unary(
                '/RPCExample/TestRPCTwoArgTwoReturn',
                request_serializer=VariousArgsAndReturnsRPCExample__pb2.TestRPCTwoArgTwoReturnRequest.SerializeToString,
                response_deserializer=VariousArgsAndReturnsRPCExample__pb2.TestRPCTwoArgTwoReturnResponse.FromString,
                _registered_method=True)


class RPCExampleServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ExampleOneArgOneReturn(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TestRPCNoArgs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TestRPCNoInputNoReturn(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TestRPCNoReturn(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TestRPCTwoArgTwoReturn(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RPCExampleServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ExampleOneArgOneReturn': grpc.unary_unary_rpc_method_handler(
                    servicer.ExampleOneArgOneReturn,
                    request_deserializer=VariousArgsAndReturnsRPCExample__pb2.ExampleOneArgOneReturnRequest.FromString,
                    response_serializer=VariousArgsAndReturnsRPCExample__pb2.ExampleOneArgOneReturnResponse.SerializeToString,
            ),
            'TestRPCNoArgs': grpc.unary_unary_rpc_method_handler(
                    servicer.TestRPCNoArgs,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=VariousArgsAndReturnsRPCExample__pb2.TestRPCNoArgsResponse.SerializeToString,
            ),
            'TestRPCNoInputNoReturn': grpc.unary_unary_rpc_method_handler(
                    servicer.TestRPCNoInputNoReturn,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'TestRPCNoReturn': grpc.unary_unary_rpc_method_handler(
                    servicer.TestRPCNoReturn,
                    request_deserializer=VariousArgsAndReturnsRPCExample__pb2.TestRPCNoReturnRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'TestRPCTwoArgTwoReturn': grpc.unary_unary_rpc_method_handler(
                    servicer.TestRPCTwoArgTwoReturn,
                    request_deserializer=VariousArgsAndReturnsRPCExample__pb2.TestRPCTwoArgTwoReturnRequest.FromString,
                    response_serializer=VariousArgsAndReturnsRPCExample__pb2.TestRPCTwoArgTwoReturnResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'RPCExample', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('RPCExample', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class RPCExample(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ExampleOneArgOneReturn(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/RPCExample/ExampleOneArgOneReturn',
            VariousArgsAndReturnsRPCExample__pb2.ExampleOneArgOneReturnRequest.SerializeToString,
            VariousArgsAndReturnsRPCExample__pb2.ExampleOneArgOneReturnResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def TestRPCNoArgs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/RPCExample/TestRPCNoArgs',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            VariousArgsAndReturnsRPCExample__pb2.TestRPCNoArgsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def TestRPCNoInputNoReturn(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/RPCExample/TestRPCNoInputNoReturn',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def TestRPCNoReturn(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/RPCExample/TestRPCNoReturn',
            VariousArgsAndReturnsRPCExample__pb2.TestRPCNoReturnRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def TestRPCTwoArgTwoReturn(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/RPCExample/TestRPCTwoArgTwoReturn',
            VariousArgsAndReturnsRPCExample__pb2.TestRPCTwoArgTwoReturnRequest.SerializeToString,
            VariousArgsAndReturnsRPCExample__pb2.TestRPCTwoArgTwoReturnResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
